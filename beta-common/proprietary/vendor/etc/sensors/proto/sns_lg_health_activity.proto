// @file sns_lg_health_activity.proto
//
// Defines standard message types for the LG_HEALTH_ACTIVITY
//
// Copyright (c) 2017 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
syntax = "proto2";
import "nanopb.proto";
import "sns_std_sensor.proto";

enum sns_lg_health_activity_msgid
{
  option (nanopb_enumopt).long_names = false;

  SNS_LG_HEALTH_ACTIVITY_MSGID_SNS_LG_HEALTH_ACTIVITY_DATA = 1024;
}

enum sns_lg_health_motion_state
{
  option (nanopb_enumopt).long_names = false;

  // stated with 1 to match with algo where 0
  // is for UNKNOWN
  SNS_LG_HEALTH_STATIONARY  = 1;
  SNS_LG_HEALTH_MOVE        = 2;
  SNS_LG_HEALTH_FIDDLE      = 3;
  SNS_LG_HEALTH_PEDESTRIAN  = 4;
  SNS_LG_HEALTH_VEHICLE     = 5;
  SNS_LG_HEALTH_WALK        = 6;
  SNS_LG_HEALTH_RUN         = 7;
  SNS_LG_HEALTH_BIKE        = 8;
  SNS_LG_HEALTH_WALK_UP     = 9;
  SNS_LG_HEALTH_WALK_DOWN   = 10;
  SNS_LG_HEALTH_RUN_UP      = 11;
  SNS_LG_HEALTH_RUN_DOWN    = 12;
}

enum sns_lg_health_alt_state
{
  option (nanopb_enumopt).long_names = false;
  SNS_LG_HEALTH_ALT_NO_CHANGE = 0;
  SNS_LG_HEALTH_ALT_UP        = 1;
  SNS_LG_HEALTH_ALT_DOWN      = 2;
  SNS_LG_HEALTH_ALT_FAST_UP   = 3;
  SNS_LG_HEALTH_ALT_FAST_DOWN = 4;
}

// Configuration Message
// Used to either request for a certain configuration of the Sim Sensor or
// alter an already existing configuration of the Simulation Sensor
// Uses sns_std_sensor_config defined in sns_std_sensor.proto
// The message field definitions are as follows:
// 1) float sample_rate
//      containing the required sample rate of the Sim sensor in hertz

// Data Message
// Output data event generated by the lg_health_activity sensor.
message sns_lg_health_activity_event
{
    required sns_lg_health_motion_state ms_state = 1;
}


